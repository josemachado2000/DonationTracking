{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\SolInst\\\\SolInstEvents.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SolInstEvent from \"./SolInstEvent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SolInstEvents = ({\n  solInst\n}) => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [today] = useState(new Date());\n  useEffect(() => {\n    const getEvents = async () => {\n      const events = await fetchEvents();\n      setEvents(events);\n    };\n\n    getEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    const solInstId = {\n      solInstId: solInst.id\n    };\n    const response = await axios.post(\"http://localhost:8080/get_EVENTS_by_SOLINST\", solInstId);\n    return response.data;\n  };\n\n  const filteredEvents = events => {\n    var eventsIds = [];\n    events.forEach(e => {\n      eventsIds.push(e.oldId);\n    });\n    events = events.filter(function (item) {\n      return !eventsIds.includes(item.id);\n    });\n    return events;\n  };\n\n  const onDonate = async (newDonation, newEventDonate) => {\n    try {\n      await axios.post(\"http://localhost:8080/create_DONATION\", newDonation);\n      await axios.post(\"http://localhost:8080/create_EVENT\", newEventDonate);\n      setEvents([...events, newEventDonate]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filteredEvents(events).map(event => event.isEnabled === 1 ? new Date(event.endDate).getTime() < today.getTime() ? \"\" : /*#__PURE__*/_jsxDEV(SolInstEvent, {\n      event: event,\n      component: \"SolInstEvents.js\",\n      onDonate: onDonate\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this) : \"\")\n  }, void 0, false);\n};\n\n_s(SolInstEvents, \"4m9ME2ePTyTt7OFhbSDJNtRUQ2E=\");\n\n_c = SolInstEvents;\nexport default SolInstEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolInstEvents\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/SolInst/SolInstEvents.js"],"names":["useState","useEffect","axios","SolInstEvent","SolInstEvents","solInst","events","setEvents","today","Date","getEvents","fetchEvents","solInstId","id","response","post","data","filteredEvents","eventsIds","forEach","e","push","oldId","filter","item","includes","onDonate","newDonation","newEventDonate","console","log","map","event","isEnabled","endDate","getTime"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,KAAD,IAAUR,QAAQ,CAAC,IAAIS,IAAJ,EAAD,CAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMJ,MAAM,GAAG,MAAMK,WAAW,EAAhC;AACAJ,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAHD;;AAIAI,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,SAAS,GAAG;AAAEA,MAAAA,SAAS,EAAEP,OAAO,CAACQ;AAArB,KAAlB;AACA,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CACrB,6CADqB,EAErBH,SAFqB,CAAvB;AAIA,WAAOE,QAAQ,CAACE,IAAhB;AACD,GAPD;;AASA,QAAMC,cAAc,GAAIX,MAAD,IAAY;AACjC,QAAIY,SAAS,GAAG,EAAhB;AACAZ,IAAAA,MAAM,CAACa,OAAP,CAAgBC,CAAD,IAAO;AACpBF,MAAAA,SAAS,CAACG,IAAV,CAAeD,CAAC,CAACE,KAAjB;AACD,KAFD;AAIAhB,IAAAA,MAAM,GAAGA,MAAM,CAACiB,MAAP,CAAc,UAAUC,IAAV,EAAgB;AACrC,aAAO,CAACN,SAAS,CAACO,QAAV,CAAmBD,IAAI,CAACX,EAAxB,CAAR;AACD,KAFQ,CAAT;AAIA,WAAOP,MAAP;AACD,GAXD;;AAaA,QAAMoB,QAAQ,GAAG,OAAOC,WAAP,EAAoBC,cAApB,KAAuC;AACtD,QAAI;AACF,YAAM1B,KAAK,CAACa,IAAN,CAAW,uCAAX,EAAoDY,WAApD,CAAN;AACA,YAAMzB,KAAK,CAACa,IAAN,CAAW,oCAAX,EAAiDa,cAAjD,CAAN;AACArB,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYsB,cAAZ,CAAD,CAAT;AACD,KAJD,CAIE,OAAOR,CAAP,EAAU;AACVS,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AACD;AACF,GARD;;AAUA,sBACE;AAAA,cACGH,cAAc,CAACX,MAAD,CAAd,CAAuByB,GAAvB,CAA4BC,KAAD,IAC1BA,KAAK,CAACC,SAAN,KAAoB,CAApB,GACE,IAAIxB,IAAJ,CAASuB,KAAK,CAACE,OAAf,EAAwBC,OAAxB,KAAoC3B,KAAK,CAAC2B,OAAN,EAApC,GACE,EADF,gBAGE,QAAC,YAAD;AAEE,MAAA,KAAK,EAAEH,KAFT;AAGE,MAAA,SAAS,EAAE,kBAHb;AAIE,MAAA,QAAQ,EAAEN;AAJZ,OACOM,KAAK,CAACnB,EADb;AAAA;AAAA;AAAA;AAAA,YAJJ,GAYE,EAbH;AADH,mBADF;AAoBD,CAhED;;GAAMT,a;;KAAAA,a;AAkEN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport SolInstEvent from \"./SolInstEvent\";\r\n\r\nconst SolInstEvents = ({ solInst }) => {\r\n  const [events, setEvents] = useState([]);\r\n  const [today] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const events = await fetchEvents();\r\n      setEvents(events);\r\n    };\r\n    getEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    const solInstId = { solInstId: solInst.id };\r\n    const response = await axios.post(\r\n      \"http://localhost:8080/get_EVENTS_by_SOLINST\",\r\n      solInstId\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  const filteredEvents = (events) => {\r\n    var eventsIds = [];\r\n    events.forEach((e) => {\r\n      eventsIds.push(e.oldId);\r\n    });\r\n\r\n    events = events.filter(function (item) {\r\n      return !eventsIds.includes(item.id);\r\n    });\r\n\r\n    return events;\r\n  };\r\n\r\n  const onDonate = async (newDonation, newEventDonate) => {\r\n    try {\r\n      await axios.post(\"http://localhost:8080/create_DONATION\", newDonation);\r\n      await axios.post(\"http://localhost:8080/create_EVENT\", newEventDonate);\r\n      setEvents([...events, newEventDonate]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {filteredEvents(events).map((event) =>\r\n        event.isEnabled === 1 ? (\r\n          new Date(event.endDate).getTime() < today.getTime() ? (\r\n            \"\"\r\n          ) : (\r\n            <SolInstEvent\r\n              key={event.id}\r\n              event={event}\r\n              component={\"SolInstEvents.js\"}\r\n              onDonate={onDonate}\r\n            />\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SolInstEvents;\r\n"]},"metadata":{},"sourceType":"module"}
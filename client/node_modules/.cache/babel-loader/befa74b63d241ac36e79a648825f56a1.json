{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\Events\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Events.css\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Event from \"./Event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Events = () => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [donationSuccess, setDonationSuccess] = useState(false);\n\n  const onDonateSuccess = showAlert => {\n    console.log(showAlert);\n    setDonationSuccess(showAlert);\n  };\n\n  const onDonate = async (newDonation, newEventDonate) => {\n    try {\n      await axios.post(\"http://localhost:8080/create_DONATION\", newDonation);\n      await axios.post(\"http://localhost:8080/create_EVENT\", newEventDonate);\n      setEvents([...events, newEventDonate]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    const getEvents = async () => {\n      const events = await fetchEvents();\n      setEvents(events);\n    };\n\n    getEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    const response = await axios.get(\"http://localhost:8080/get_all_EVENTS\");\n    return response.data;\n  }; // const filterEvents = (array1, array2) => {\n  //   //console.log(array1);\n  //   //console.log(array2);\n  //   for (var ar1 of array1) {\n  //     for (var ar2 of array2) {\n  //       //console.log(ar1.oldId + \"           \" + ar2.id);\n  //       if (ar1.oldId === ar2.id) {\n  //         //console.log(\"Corta: \" + ar2.id);\n  //         array2.splice(array2.indexOf(ar2), 1);\n  //         break;\n  //       }\n  //     }\n  //   }\n  //   //console.log(array2);\n  //   return array2;\n  // };\n\n\n  const filteredEvents = events => {\n    var eventsIds = [];\n    events.forEach(e => {\n      eventsIds.push(e.oldId);\n    });\n    events = events.filter(function (item) {\n      console.log(item.id);\n      return !eventsIds.includes(item.id);\n    });\n    return events;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [donationSuccess ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Thanks for your donation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventsList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          paddingTop: \"20px\",\n          paddingLeft: \"20px\"\n        },\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), filteredEvents(events).map(event => /*#__PURE__*/_jsxDEV(Event, {\n        event: event,\n        onDonateSuccess: onDonateSuccess,\n        onDonate: onDonate\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Events, \"oCORiZqdfeFjqwTDwivHyUZUx3I=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/Events/Events.js"],"names":["useState","useEffect","axios","Alert","Event","Events","events","setEvents","donationSuccess","setDonationSuccess","onDonateSuccess","showAlert","console","log","onDonate","newDonation","newEventDonate","post","e","getEvents","fetchEvents","response","get","data","filteredEvents","eventsIds","forEach","push","oldId","filter","item","id","includes","paddingTop","paddingLeft","map","event"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Events.css\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport Event from \"./Event\";\r\n\r\nconst Events = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [donationSuccess, setDonationSuccess] = useState(false);\r\n\r\n  const onDonateSuccess = (showAlert) => {\r\n    console.log(showAlert);\r\n    setDonationSuccess(showAlert);\r\n  };\r\n\r\n  const onDonate = async (newDonation, newEventDonate) => {\r\n    try {\r\n      await axios.post(\"http://localhost:8080/create_DONATION\", newDonation);\r\n      await axios.post(\"http://localhost:8080/create_EVENT\", newEventDonate);\r\n      setEvents([...events, newEventDonate]);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const events = await fetchEvents();\r\n      setEvents(events);\r\n    };\r\n    getEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/get_all_EVENTS\");\r\n    return response.data;\r\n  };\r\n\r\n  // const filterEvents = (array1, array2) => {\r\n  //   //console.log(array1);\r\n  //   //console.log(array2);\r\n  //   for (var ar1 of array1) {\r\n  //     for (var ar2 of array2) {\r\n  //       //console.log(ar1.oldId + \"           \" + ar2.id);\r\n  //       if (ar1.oldId === ar2.id) {\r\n  //         //console.log(\"Corta: \" + ar2.id);\r\n  //         array2.splice(array2.indexOf(ar2), 1);\r\n  //         break;\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   //console.log(array2);\r\n  //   return array2;\r\n  // };\r\n\r\n  const filteredEvents = (events) => {\r\n    var eventsIds = [];\r\n    events.forEach((e) => {\r\n      eventsIds.push(e.oldId);\r\n    });\r\n\r\n    events = events.filter(function (item) {\r\n      console.log(item.id);\r\n      return !eventsIds.includes(item.id);\r\n    });\r\n\r\n    return events;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {donationSuccess ? (\r\n        <Alert variant={\"success\"}>Thanks for your donation!</Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"eventsList\">\r\n        <h3 style={{ paddingTop: \"20px\", paddingLeft: \"20px\" }}>Events</h3>\r\n        {filteredEvents(events).map((event) => (\r\n          <Event\r\n            key={event.id}\r\n            event={event}\r\n            onDonateSuccess={onDonateSuccess}\r\n            onDonate={onDonate}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n"]},"metadata":{},"sourceType":"module"}
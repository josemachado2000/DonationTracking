{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\Events\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Events.css\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Event from \"./Event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Events = () => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [events1, setEvents1] = useState([]);\n  const [donationSuccess, setDonationSuccess] = useState(false);\n\n  const onDonateSuccess = showAlert => {\n    console.log(showAlert);\n    setDonationSuccess(showAlert);\n  };\n\n  useEffect(() => {\n    const getEvents = async () => {\n      const events = await fetchEvents();\n      setEvents(events);\n    };\n\n    getEvents();\n\n    const getEvents1 = async () => {\n      const events = await fetchEvents();\n      setEvents1(events);\n    };\n\n    getEvents1();\n  }, []);\n\n  const fetchEvents = async () => {\n    const response = await axios.get(\"http://localhost:8080/get_all_EVENTS\");\n    return response.data;\n  };\n\n  const filterEvents = (array1, array2) => {\n    //console.log(array1);\n    //console.log(array2);\n    for (var ar1 of array1) {\n      for (var ar2 of array2) {\n        //console.log(ar1.oldId + \"           \" + ar2.id);\n        if (ar1.oldId === ar2.id) {\n          //console.log(\"Corta: \" + ar2.id);\n          array2.splice(array2.indexOf(ar2), 1);\n          break;\n        }\n      }\n    } //console.log(array2);\n\n\n    return array2;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [donationSuccess ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      children: \"Thanks for your donation!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventsList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          paddingTop: \"20px\",\n          paddingLeft: \"20px\"\n        },\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), filterEvents(events, events1).map(event => /*#__PURE__*/_jsxDEV(Event, {\n        event: event,\n        onDonateSuccess: onDonateSuccess\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Events, \"36HY0h35bwB0PhbKVCazcI5DqHs=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/Events/Events.js"],"names":["useState","useEffect","axios","Alert","Event","Events","events","setEvents","events1","setEvents1","donationSuccess","setDonationSuccess","onDonateSuccess","showAlert","console","log","getEvents","fetchEvents","getEvents1","response","get","data","filterEvents","array1","array2","ar1","ar2","oldId","id","splice","indexOf","paddingTop","paddingLeft","map","event"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAAC,KAAD,CAAtD;;AAEA,QAAMY,eAAe,GAAIC,SAAD,IAAe;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACAF,IAAAA,kBAAkB,CAACE,SAAD,CAAlB;AACD,GAHD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAG,YAAY;AAC5B,YAAMV,MAAM,GAAG,MAAMW,WAAW,EAAhC;AACAV,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAHD;;AAIAU,IAAAA,SAAS;;AAET,UAAME,UAAU,GAAG,YAAY;AAC7B,YAAMZ,MAAM,GAAG,MAAMW,WAAW,EAAhC;AACAR,MAAAA,UAAU,CAACH,MAAD,CAAV;AACD,KAHD;;AAIAY,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMD,WAAW,GAAG,YAAY;AAC9B,UAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,sCAAV,CAAvB;AACA,WAAOD,QAAQ,CAACE,IAAhB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AACvC;AACA;AACA,SAAK,IAAIC,GAAT,IAAgBF,MAAhB,EAAwB;AACtB,WAAK,IAAIG,GAAT,IAAgBF,MAAhB,EAAwB;AACtB;AACA,YAAIC,GAAG,CAACE,KAAJ,KAAcD,GAAG,CAACE,EAAtB,EAA0B;AACxB;AACAJ,UAAAA,MAAM,CAACK,MAAP,CAAcL,MAAM,CAACM,OAAP,CAAeJ,GAAf,CAAd,EAAmC,CAAnC;AACA;AACD;AACF;AACF,KAZsC,CAavC;;;AACA,WAAOF,MAAP;AACD,GAfD;;AAiBA,sBACE;AAAA,eACGd,eAAe,gBACd,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADc,GAGd,EAJJ,eAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEqB,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,WAAW,EAAE;AAAnC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGV,YAAY,CAAChB,MAAD,EAASE,OAAT,CAAZ,CAA8ByB,GAA9B,CAAmCC,KAAD,iBACjC,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEA,KAFT;AAGE,QAAA,eAAe,EAAEtB;AAHnB,SACOsB,KAAK,CAACN,EADb;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAmBD,CAjED;;GAAMvB,M;;KAAAA,M;AAmEN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./Events.css\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nimport Event from \"./Event\";\r\n\r\nconst Events = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [events1, setEvents1] = useState([]);\r\n  const [donationSuccess, setDonationSuccess] = useState(false);\r\n\r\n  const onDonateSuccess = (showAlert) => {\r\n    console.log(showAlert);\r\n    setDonationSuccess(showAlert);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const events = await fetchEvents();\r\n      setEvents(events);\r\n    };\r\n    getEvents();\r\n\r\n    const getEvents1 = async () => {\r\n      const events = await fetchEvents();\r\n      setEvents1(events);\r\n    };\r\n    getEvents1();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    const response = await axios.get(\"http://localhost:8080/get_all_EVENTS\");\r\n    return response.data;\r\n  };\r\n\r\n  const filterEvents = (array1, array2) => {\r\n    //console.log(array1);\r\n    //console.log(array2);\r\n    for (var ar1 of array1) {\r\n      for (var ar2 of array2) {\r\n        //console.log(ar1.oldId + \"           \" + ar2.id);\r\n        if (ar1.oldId === ar2.id) {\r\n          //console.log(\"Corta: \" + ar2.id);\r\n          array2.splice(array2.indexOf(ar2), 1);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    //console.log(array2);\r\n    return array2;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {donationSuccess ? (\r\n        <Alert variant={\"success\"}>Thanks for your donation!</Alert>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"eventsList\">\r\n        <h3 style={{ paddingTop: \"20px\", paddingLeft: \"20px\" }}>Events</h3>\r\n        {filterEvents(events, events1).map((event) => (\r\n          <Event\r\n            key={event.id}\r\n            event={event}\r\n            onDonateSuccess={onDonateSuccess}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\Events\\\\EventsList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, React } from \"react\";\nimport \"./Events.css\";\nimport Event from \"./Event\";\nimport EventDetails from \"./EventDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EventsList = () => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [eventClicked, setEventClicked] = useState(false);\n\n  const eventClick = () => {\n    setEventClicked(true);\n  };\n\n  useEffect(() => {\n    const getEvents = async () => {\n      const events = await fetchEvents();\n      setEvents(events);\n    };\n\n    getEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    const response = await fetch(\"http://localhost:8080/get_all_EVENTS\");\n    const data = await response.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [eventClicked ? /*#__PURE__*/_jsxDEV(EventDetails, {\n      event: event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventsList\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n        event: event,\n        onClick: () => eventClick()\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EventsList, \"U1WZn3bztcXEizNmkFyEdboBM4I=\");\n\n_c = EventsList;\nexport default EventsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventsList\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/Events/EventsList.js"],"names":["useState","useEffect","React","Event","EventDetails","EventsList","events","setEvents","eventClicked","setEventClicked","eventClick","getEvents","fetchEvents","response","fetch","data","json","event","map","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA2C,OAA3C;AAEA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMU,UAAU,GAAG,MAAM;AACvBD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,SAAS,GAAG,YAAY;AAC5B,YAAML,MAAM,GAAG,MAAMM,WAAW,EAAhC;AACAL,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAHD;;AAIAK,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAMA,sBACE;AAAA,eACGP,YAAY,gBAAG,QAAC,YAAD;AAAc,MAAA,KAAK,EAAES;AAArB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAoC,EADnD,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGX,MAAM,CAACY,GAAP,CAAYD,KAAD,iBACV,QAAC,KAAD;AAAsB,QAAA,KAAK,EAAEA,KAA7B;AAAoC,QAAA,OAAO,EAAE,MAAMP,UAAU;AAA7D,SAAYO,KAAK,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CA/BD;;GAAMd,U;;KAAAA,U;AAiCN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect, React } from \"react\";\r\n\r\nimport \"./Events.css\";\r\nimport Event from \"./Event\";\r\n\r\nimport EventDetails from \"./EventDetails\";\r\nconst EventsList = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [eventClicked, setEventClicked] = useState(false);\r\n  const eventClick = () => {\r\n    setEventClicked(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const events = await fetchEvents();\r\n      setEvents(events);\r\n    };\r\n    getEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    const response = await fetch(\"http://localhost:8080/get_all_EVENTS\");\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {eventClicked ? <EventDetails event={event} /> : \"\"}\r\n      <div className=\"eventsList\">\r\n        {events.map((event) => (\r\n          <Event key={event.id} event={event} onClick={() => eventClick()} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventsList;\r\n"]},"metadata":{},"sourceType":"module"}
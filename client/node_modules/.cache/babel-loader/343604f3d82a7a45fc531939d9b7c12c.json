{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\SupplCo\\\\Order.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Order = ({\n  order\n}) => {\n  _s();\n\n  const [event, setEvent] = useState([]);\n  const [show, setShow] = useState(false); //Invoice Modal\n\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(Date());\n  useEffect(() => {\n    const getEventById = async () => {\n      const event = await fetchEventById();\n      setEvent(event);\n    };\n\n    getEventById();\n  }, []);\n\n  const fetchEventById = async () => {\n    const eventId = {\n      eventId: order.eventId\n    };\n    const response = await axios.post(\"http://localhost:8080/get_EVENT_by_Id\", eventId);\n    return response.data;\n  };\n\n  const handleClose = () => {\n    setShow(false);\n    setAmount(\"\");\n    setDate(new Date());\n  };\n\n  const handleShow = () => setShow(true);\n\n  const createInvoice = async event => {// if (!description || !orderDate) {\n    //   alert(\"Empty fields!\");\n    //   return;\n    // }\n    // console.log(event);\n    // const newOrder = {\n    //   id: uuidv4(),\n    //   // oldId: event.id,\n    //   description: orderDescription,\n    //   date:\n    //     new Date(orderDate).getDate() +\n    //     \"/\" +\n    //     (new Date(orderDate).getMonth() + 1) +\n    //     \"/\" +\n    //     new Date(orderDate).getFullYear(),\n    //   misId: user.id,\n    //   supplCoId: event.supplCoId,\n    //   eventId: event.id,\n    // };\n    // try {\n    //   await axios.post(\"http://localhost:8080/create_ORDER\", newOrder);\n    //   handleClose();\n    // } catch (e) {\n    //   console.log(e);\n    // }\n  };\n\n  console.log(order);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"supplco_invoiceDetails\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invoice\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [event[0] ? /*#__PURE__*/_jsxDEV(Card.Header, {\n          className: \"cardTitle\",\n          children: event[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n            children: order.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: order.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          backdrop: \"static\",\n          keyboard: false,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: [event.name, \" - Invoice\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: \"2\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Order Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    readOnly: true,\n                    value: order.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: \"2\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Order Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    readOnly: true,\n                    value: order.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: \"2\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Invoice Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    value: amount,\n                    onChange: e => setAmount(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                style: {\n                  marginTop: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: \"2\",\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: \"Invoice Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: \"10\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    readOnly: true,\n                    value: date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => createInvoice(order),\n              children: \"Create Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"btn btn-dark btn-sm\",\n          onClick: () => handleShow(),\n          style: {\n            float: \"right\",\n            marginTop: \"20px\"\n          },\n          children: \"Create Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Order, \"jphOwLdUSU9GQhy6ZnzlLj5Ie4k=\");\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/SupplCo/Order.js"],"names":["useState","useEffect","axios","Card","Button","Modal","Form","Row","Col","Order","order","event","setEvent","show","setShow","amount","setAmount","date","setDate","Date","getEventById","fetchEventById","eventId","response","post","data","handleClose","handleShow","createInvoice","console","log","name","description","marginTop","fontWeight","e","target","value","float"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC,CAF2B,CAI3B;;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACmB,IAAI,EAAL,CAAhC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,YAAY,GAAG,YAAY;AAC/B,YAAMT,KAAK,GAAG,MAAMU,cAAc,EAAlC;AACAT,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAHD;;AAIAS,IAAAA,YAAY;AACb,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,OAAO,GAAG;AAAEA,MAAAA,OAAO,EAAEZ,KAAK,CAACY;AAAjB,KAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CACrB,uCADqB,EAErBF,OAFqB,CAAvB;AAIA,WAAOC,QAAQ,CAACE,IAAhB;AACD,GAPD;;AASA,QAAMC,WAAW,GAAG,MAAM;AACxBZ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAE,IAAAA,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAP;AACD,GAJD;;AAKA,QAAMQ,UAAU,GAAG,MAAMb,OAAO,CAAC,IAAD,CAAhC;;AAEA,QAAMc,aAAa,GAAG,MAAOjB,KAAP,IAAiB,CACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA1BD;;AA2BAkB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,IAAD;AAAA,mBACGC,KAAK,CAAC,CAAD,CAAL,gBACC,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,SAAS,EAAC,WAAvB;AAAA,oBAAoCA,KAAK,CAAC,CAAD,CAAL,CAASoB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADD,GAGC,EAJJ,eAME,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYrB,KAAK,CAACsB;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,sBAAYtB,KAAK,CAACO;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEJ,IADR;AAEE,UAAA,MAAM,EAAEa,WAFV;AAGE,UAAA,QAAQ,EAAC,QAHX;AAIE,UAAA,QAAQ,EAAE,KAJZ;AAAA,kCAME,QAAC,KAAD,CAAO,MAAP;AAAc,YAAA,WAAW,MAAzB;AAAA,mCACE,QAAC,KAAD,CAAO,KAAP;AAAA,yBAAcf,KAAK,CAACoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBANF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAA,mCACE,QAAC,IAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAExB,GAAhB;AAAqB,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,SAAS,EAAE;AAAb,iBAA5B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,MAAM,MAAlB;AAAmB,kBAAA,EAAE,EAAC,GAAtB;AAA0B,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,IAAR;AAAA,yCACE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,EAAE,EAAC,UADL;AAEE,oBAAA,QAAQ,MAFV;AAGE,oBAAA,KAAK,EAAExB,KAAK,CAACsB;AAHf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAEzB,GAAhB;AAAqB,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,SAAS,EAAE;AAAb,iBAA5B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,MAAM,MAAlB;AAAmB,kBAAA,EAAE,EAAC,GAAtB;AAA0B,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,IAAR;AAAA,yCACE,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,QAAQ,MAAlC;AAAmC,oBAAA,KAAK,EAAExB,KAAK,CAACO;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF,eAuBE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAEV,GAAhB;AAAqB,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,SAAS,EAAE;AAAb,iBAA5B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,MAAM,MAAlB;AAAmB,kBAAA,EAAE,EAAC,GAAtB;AAA0B,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,IAAR;AAAA,yCACE,QAAC,IAAD,CAAM,OAAN;AACE,oBAAA,IAAI,EAAC,QADP;AAEE,oBAAA,KAAK,EAAEnB,MAFT;AAGE,oBAAA,QAAQ,EAAGoB,CAAD,IAAOnB,SAAS,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvBF,eAoCE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAE9B,GAAhB;AAAqB,gBAAA,KAAK,EAAE;AAAE0B,kBAAAA,SAAS,EAAE;AAAb,iBAA5B;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,MAAM,MAAlB;AAAmB,kBAAA,EAAE,EAAC,GAAtB;AAA0B,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,IAAR;AAAA,yCACE,QAAC,IAAD,CAAM,OAAN;AAAc,oBAAA,IAAI,EAAC,MAAnB;AAA0B,oBAAA,QAAQ,MAAlC;AAAmC,oBAAA,KAAK,EAAEjB;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAVF,eA0DE,QAAC,KAAD,CAAO,MAAP;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAES,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,OAAO,EAAE,MAAME,aAAa,CAAClB,KAAD,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eA+EE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,qBADV;AAEE,UAAA,OAAO,EAAE,MAAMiB,UAAU,EAF3B;AAGE,UAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE,OAAT;AAAkBL,YAAAA,SAAS,EAAE;AAA7B,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/EF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6FD,CAzJD;;GAAMxB,K;;KAAAA,K;AA2JN,eAAeA,KAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst Order = ({ order }) => {\r\n  const [event, setEvent] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  //Invoice Modal\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(Date());\r\n\r\n  useEffect(() => {\r\n    const getEventById = async () => {\r\n      const event = await fetchEventById();\r\n      setEvent(event);\r\n    };\r\n    getEventById();\r\n  }, []);\r\n\r\n  const fetchEventById = async () => {\r\n    const eventId = { eventId: order.eventId };\r\n    const response = await axios.post(\r\n      \"http://localhost:8080/get_EVENT_by_Id\",\r\n      eventId\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setAmount(\"\");\r\n    setDate(new Date());\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createInvoice = async (event) => {\r\n    // if (!description || !orderDate) {\r\n    //   alert(\"Empty fields!\");\r\n    //   return;\r\n    // }\r\n    // console.log(event);\r\n    // const newOrder = {\r\n    //   id: uuidv4(),\r\n    //   // oldId: event.id,\r\n    //   description: orderDescription,\r\n    //   date:\r\n    //     new Date(orderDate).getDate() +\r\n    //     \"/\" +\r\n    //     (new Date(orderDate).getMonth() + 1) +\r\n    //     \"/\" +\r\n    //     new Date(orderDate).getFullYear(),\r\n    //   misId: user.id,\r\n    //   supplCoId: event.supplCoId,\r\n    //   eventId: event.id,\r\n    // };\r\n    // try {\r\n    //   await axios.post(\"http://localhost:8080/create_ORDER\", newOrder);\r\n    //   handleClose();\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    // }\r\n  };\r\n  console.log(order);\r\n  return (\r\n    <div className=\"supplco_invoiceDetails\">\r\n      <div className=\"invoice\">\r\n        <Card>\r\n          {event[0] ? (\r\n            <Card.Header className=\"cardTitle\">{event[0].name}</Card.Header>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Card.Body>\r\n            <Card.Text>{order.description}</Card.Text>\r\n            <Card.Text>{order.date}</Card.Text>\r\n          </Card.Body>\r\n\r\n          <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>{event.name} - Invoice</Modal.Title>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\r\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"bold\" }}>\r\n                    Order Description\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      readOnly\r\n                      value={order.description}\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\r\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"bold\" }}>\r\n                    Order Date\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" readOnly value={order.date} />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\r\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"bold\" }}>\r\n                    Invoice Amount\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      value={amount}\r\n                      onChange={(e) => setAmount(e.target.value)}\r\n                    />\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\r\n                  <Form.Label column sm=\"2\" style={{ fontWeight: \"bold\" }}>\r\n                    Invoice Date\r\n                  </Form.Label>\r\n                  <Col sm=\"10\">\r\n                    <Form.Control type=\"text\" readOnly value={date} />\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={() => createInvoice(order)}>\r\n                Create Invoice\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Button\r\n            variant=\"btn btn-dark btn-sm\"\r\n            onClick={() => handleShow()}\r\n            style={{ float: \"right\", marginTop: \"20px\" }}\r\n          >\r\n            Create Invoice\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\SolInst\\\\SolInstEvents.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, React } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SolInstEvents = ({\n  solInst\n}) => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const getEvents = async () => {\n      const solInstId = {\n        solInstId: solInst.id\n      };\n      const response = await axios.post(\"http://localhost:8080/get_EVENTS_by_SOLINST\", solInstId);\n      console.log(response);\n      setEvents(response.data);\n      console.log(events); // const events1 = await fetchEvents();\n      // console.log(events1);\n      // setEvents(events1);\n    };\n\n    getEvents();\n  }, []); // const fetchEvents = async () => {\n  //   const solInstId =  solInst.id\n  //   const response = await axios.get(\n  //     \"http://localhost:8080/get_EVENTS_by_SOLINST\",\n  //     { solInstId: solInstId}\n  //   );\n  //   return response.data;\n  // };\n\n  console.log(events);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, event.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SolInstEvents, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = SolInstEvents;\nexport default SolInstEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"SolInstEvents\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/SolInst/SolInstEvents.js"],"names":["useState","useEffect","React","axios","SolInstEvents","solInst","events","setEvents","getEvents","solInstId","id","response","post","console","log","data","map","event"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACrC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,SAAS,GAAG,YAAY;AAC5B,YAAMC,SAAS,GAAG;AAAEA,QAAAA,SAAS,EAAEJ,OAAO,CAACK;AAArB,OAAlB;AACA,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CACrB,6CADqB,EAErBH,SAFqB,CAAvB;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAJ,MAAAA,SAAS,CAACI,QAAQ,CAACI,IAAV,CAAT;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ,EAR4B,CAU5B;AACA;AACA;AACD,KAbD;;AAcAE,IAAAA,SAAS;AACV,GAhBQ,EAgBN,EAhBM,CAAT,CAHqC,CAqBrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,sBACE;AAAA,cACGA,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACV;AAAA,6BACE;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,OAAUA,KAAK,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAvCD;;GAAMN,a;;KAAAA,a;AAyCN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect, React } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SolInstEvents = ({ solInst }) => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const solInstId = { solInstId: solInst.id };\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/get_EVENTS_by_SOLINST\",\r\n        solInstId\r\n      );\r\n      console.log(response);\r\n      setEvents(response.data);\r\n      console.log(events);\r\n\r\n      // const events1 = await fetchEvents();\r\n      // console.log(events1);\r\n      // setEvents(events1);\r\n    };\r\n    getEvents();\r\n  }, []);\r\n\r\n  // const fetchEvents = async () => {\r\n  //   const solInstId =  solInst.id\r\n  //   const response = await axios.get(\r\n  //     \"http://localhost:8080/get_EVENTS_by_SOLINST\",\r\n  //     { solInstId: solInstId}\r\n  //   );\r\n  //   return response.data;\r\n  // };\r\n  console.log(events);\r\n  return (\r\n    <div>\r\n      {events.map((event) => (\r\n        <div key={event.id}>\r\n          <h6>{event}</h6>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SolInstEvents;\r\n"]},"metadata":{},"sourceType":"module"}
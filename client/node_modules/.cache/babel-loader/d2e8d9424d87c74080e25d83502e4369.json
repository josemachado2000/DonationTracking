{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\Donations\\\\Donations.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Donations = () => {\n  _s();\n\n  const [donor] = useState(JSON.parse(localStorage.getItem(\"loggedUser\")));\n  const [donations, setDonations] = useState([]);\n  useEffect(() => {\n    const getDonations = async () => {\n      const donations = await fetchDonations();\n      setDonations(donations);\n    };\n\n    getDonations();\n  }, []);\n\n  const fetchDonations = async () => {\n    const donorId = {\n      donorId: donor.id\n    };\n    const response = await axios.get(\"http://localhost:8080/get_DONATIONS_by_DONOR\", donorId);\n    return response.data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Donations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), donations.map(donation => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      as: \"li\",\n      children: [donation.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), donation.amount, \"\\u20AC\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }, this), donation.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, this)]\n    }, donation.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Donations, \"xAXZKm7Ojz27fmVz/EQ/hSy6PRE=\");\n\n_c = Donations;\nexport default Donations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Donations\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/Donations/Donations.js"],"names":["useState","useEffect","axios","ListGroup","Donations","donor","JSON","parse","localStorage","getItem","donations","setDonations","getDonations","fetchDonations","donorId","id","response","get","data","map","donation","amount","date"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,IAAUL,QAAQ,CAACM,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAD,CAAxB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAG,YAAY;AAC/B,YAAMF,SAAS,GAAG,MAAMG,cAAc,EAAtC;AACAF,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAHD;;AAIAE,IAAAA,YAAY;AACb,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,OAAO,GAAG;AAAEA,MAAAA,OAAO,EAAET,KAAK,CAACU;AAAjB,KAAhB;AACA,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CACrB,8CADqB,EAErBH,OAFqB,CAAvB;AAIA,WAAOE,QAAQ,CAACE,IAAhB;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGR,SAAS,CAACS,GAAV,CAAeC,QAAD,iBACb,QAAC,SAAD,CAAW,IAAX;AAAgB,MAAA,EAAE,EAAC,IAAnB;AAAA,iBACGA,QAAQ,CAACL,EADZ,oBACgB;AAAA;AAAA;AAAA;AAAA,cADhB,EAEGK,QAAQ,CAACC,MAFZ,yBAEoB;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGGD,QAAQ,CAACE,IAHZ,oBAGkB;AAAA;AAAA;AAAA;AAAA,cAHlB;AAAA,OAA6BF,QAAQ,CAACL,EAAtC;AAAA;AAAA;AAAA;AAAA,YADD,CAFH;AAAA,kBADF;AAYD,CAjCD;;GAAMX,S;;KAAAA,S;AAmCN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst Donations = () => {\r\n  const [donor] = useState(JSON.parse(localStorage.getItem(\"loggedUser\")));\r\n  const [donations, setDonations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getDonations = async () => {\r\n      const donations = await fetchDonations();\r\n      setDonations(donations);\r\n    };\r\n    getDonations();\r\n  }, []);\r\n\r\n  const fetchDonations = async () => {\r\n    const donorId = { donorId: donor.id };\r\n    const response = await axios.get(\r\n      \"http://localhost:8080/get_DONATIONS_by_DONOR\",\r\n      donorId\r\n    );\r\n    return response.data;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>My Donations</h3>\r\n      {donations.map((donation) => (\r\n        <ListGroup.Item as=\"li\" key={donation.id}>\r\n          {donation.id} <br />\r\n          {donation.amount}â‚¬<br />\r\n          {donation.date} <br />\r\n        </ListGroup.Item>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Donations;\r\n"]},"metadata":{},"sourceType":"module"}
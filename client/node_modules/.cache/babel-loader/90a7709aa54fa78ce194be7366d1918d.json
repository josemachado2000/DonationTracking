{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logout = () => {\n  _s();\n\n  const history = useHistory();\n\n  const logout = () => {\n    localStorage.clear();\n    let timerInterval;\n    Swal.fire({\n      title: \"Logout!\",\n      html: \"I will close in <b></b> milliseconds.\",\n      timer: 1000,\n      timerProgressBar: true,\n      didOpen: () => {\n        Swal.showLoading();\n        timerInterval = setInterval(() => {\n          const content = Swal.getHtmlContainer();\n\n          if (content) {\n            const b = content.querySelector(\"b\");\n\n            if (b) {\n              b.textContent = Swal.getTimerLeft();\n            }\n          }\n        }, 100);\n      },\n      willClose: () => {\n        clearInterval(timerInterval);\n      }\n    }).then(result => {\n      if (result.dismiss === Swal.DismissReason.timer) {\n        console.log(\"I was closed by the timer\");\n      }\n    });\n    history.push(\"/\");\n    history.go(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: logout()\n  }, void 0, false);\n};\n\n_s(Logout, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Logout;\nexport default Logout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/Session/Logout.js"],"names":["Swal","useHistory","Logout","history","logout","localStorage","clear","timerInterval","fire","title","html","timer","timerProgressBar","didOpen","showLoading","setInterval","content","getHtmlContainer","b","querySelector","textContent","getTimerLeft","willClose","clearInterval","then","result","dismiss","DismissReason","console","log","push","go"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;;AAEA,QAAMG,MAAM,GAAG,MAAM;AACnBC,IAAAA,YAAY,CAACC,KAAb;AAEA,QAAIC,aAAJ;AACAP,IAAAA,IAAI,CAACQ,IAAL,CAAU;AACRC,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE,uCAFE;AAGRC,MAAAA,KAAK,EAAE,IAHC;AAIRC,MAAAA,gBAAgB,EAAE,IAJV;AAKRC,MAAAA,OAAO,EAAE,MAAM;AACbb,QAAAA,IAAI,CAACc,WAAL;AACAP,QAAAA,aAAa,GAAGQ,WAAW,CAAC,MAAM;AAChC,gBAAMC,OAAO,GAAGhB,IAAI,CAACiB,gBAAL,EAAhB;;AACA,cAAID,OAAJ,EAAa;AACX,kBAAME,CAAC,GAAGF,OAAO,CAACG,aAAR,CAAsB,GAAtB,CAAV;;AACA,gBAAID,CAAJ,EAAO;AACLA,cAAAA,CAAC,CAACE,WAAF,GAAgBpB,IAAI,CAACqB,YAAL,EAAhB;AACD;AACF;AACF,SAR0B,EAQxB,GARwB,CAA3B;AASD,OAhBO;AAiBRC,MAAAA,SAAS,EAAE,MAAM;AACfC,QAAAA,aAAa,CAAChB,aAAD,CAAb;AACD;AAnBO,KAAV,EAoBGiB,IApBH,CAoBSC,MAAD,IAAY;AAClB,UAAIA,MAAM,CAACC,OAAP,KAAmB1B,IAAI,CAAC2B,aAAL,CAAmBhB,KAA1C,EAAiD;AAC/CiB,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;AACF,KAxBD;AAyBA1B,IAAAA,OAAO,CAAC2B,IAAR,CAAa,GAAb;AACA3B,IAAAA,OAAO,CAAC4B,EAAR,CAAW,CAAX;AACD,GA/BD;;AAiCA,sBAAO;AAAA,cAAG3B,MAAM;AAAT,mBAAP;AACD,CArCD;;GAAMF,M;UACYD,U;;;KADZC,M;AAuCN,eAAeA,MAAf","sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Logout = () => {\r\n  const history = useHistory();\r\n\r\n  const logout = () => {\r\n    localStorage.clear();\r\n\r\n    let timerInterval;\r\n    Swal.fire({\r\n      title: \"Logout!\",\r\n      html: \"I will close in <b></b> milliseconds.\",\r\n      timer: 1000,\r\n      timerProgressBar: true,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n        timerInterval = setInterval(() => {\r\n          const content = Swal.getHtmlContainer();\r\n          if (content) {\r\n            const b = content.querySelector(\"b\");\r\n            if (b) {\r\n              b.textContent = Swal.getTimerLeft();\r\n            }\r\n          }\r\n        }, 100);\r\n      },\r\n      willClose: () => {\r\n        clearInterval(timerInterval);\r\n      },\r\n    }).then((result) => {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log(\"I was closed by the timer\");\r\n      }\r\n    });\r\n    history.push(\"/\");\r\n    history.go(0);\r\n  };\r\n\r\n  return <>{logout()}</>;\r\n};\r\n\r\nexport default Logout;\r\n"]},"metadata":{},"sourceType":"module"}
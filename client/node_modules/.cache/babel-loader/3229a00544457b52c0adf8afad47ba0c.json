{"ast":null,"code":"var _jsxFileName = \"C:\\\\donationTracking\\\\client\\\\src\\\\components\\\\Events\\\\Events.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, React } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./Events.css\";\nimport Card from \"react-bootstrap/Card\";\nimport NavBar from \"../NavBar/NavBar\";\nimport Event from \"./Event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Events = () => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [showDonate, setShowDonate] = useState(false);\n  useEffect(() => {\n    const getEvents = async () => {\n      const events = await fetchEvents();\n      setEvents(events);\n    };\n\n    getEvents();\n  }, []);\n\n  const fetchEvents = async () => {\n    const response = await fetch(\"http://localhost:8080/get_all_EVENTS\");\n    const data = await response.json();\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventsList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n        event: event\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Events, \"E7U8vOYilRptS0gFPHApOLFDyQY=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["C:/donationTracking/client/src/components/Events/Events.js"],"names":["useState","useEffect","React","BrowserRouter","Router","Route","Link","Card","NavBar","Event","Events","events","setEvents","showDonate","setShowDonate","getEvents","fetchEvents","response","fetch","data","json","map","event","id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,KAA9B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAG,YAAY;AAC5B,YAAMJ,MAAM,GAAG,MAAMK,WAAW,EAAhC;AACAJ,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAHD;;AAIAI,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAMA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,MAAM,CAACU,GAAP,CAAYC,KAAD,iBACV,QAAC,KAAD;AAAsB,QAAA,KAAK,EAAEA;AAA7B,SAAYA,KAAK,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9BD;;GAAMb,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect, React } from \"react\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./Events.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport Event from \"./Event\";\r\n\r\nconst Events = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [showDonate, setShowDonate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getEvents = async () => {\r\n      const events = await fetchEvents();\r\n      setEvents(events);\r\n    };\r\n    getEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    const response = await fetch(\"http://localhost:8080/get_all_EVENTS\");\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <NavBar />\r\n\r\n      <div className=\"eventsList\">\r\n        <h3>Events</h3>\r\n        {events.map((event) => (\r\n          <Event key={event.id} event={event} />\r\n        ))}\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n"]},"metadata":{},"sourceType":"module"}